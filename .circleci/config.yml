version: 2.1

jobs:
  build-check:
    docker:
      - image: 'python:3.7.3-stretch'
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'v1-dependencies-{{ checksum "requirements.txt" }}'
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: 'v1-dependencies-{{ checksum "requirements.txt" }}'
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  my-eks-cluster:
    docker:
      image: 'amazon/eks-cli:latest'
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          command: eksctl create cluster --name nghiahv1-cluster --node-type t3.small --nodes 2

  deploy-app:
    docker:
      image: 'docker:17.05.0-ce-git'
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - login:
          username: $DOCKER_ID
          password: $DOCKER_PASSWORD
      - run:
          command: docker build -t nghiahv1/project5:latest .
      - push:
          image: nghiahv1/project5:latest
      - run:
          command: kubectl apply -f deployment.yaml
      - run:
          command: kubectl rollout status deployment/nghiahv1-deployment

  create-my-load-balancer:
    docker:
      image: 'amazon/eks-cli:latest'
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          command: kubectl create service loadbalancer --tcp=80:80 --target-port=80 nghiahv1-service
workflows:
  default:
    jobs:
      - build-check
      - create-eks-cluster:
          requires: [build-check]
      - deploy-app:
          requires: [my-eks-cluster]
      - create-my-load-balancer:
          docker: [amazon/eks-cli:latest, my-custom-image:latest]